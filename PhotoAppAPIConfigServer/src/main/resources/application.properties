spring.application.name=PhotoAppAPIConfigServer
server.port=8012
spring.profiles.active=native

spring.cloud.config.server.native.searchLocations=file://${user.home}/Desktop/dev/config-server-nfs

#Our spring cloud config server will keep configuration data in the private repository.
#I'm going to create a new private git repository.
#a basic configuration for my spring cloud config server so that it is able to connect to my private
#GitHub repository and fetch configuration properties that it can then deliver to microservices that
#connect to Spring Cloud Config server.
spring.cloud.config.server.git.uri=https://github.com/simplyi/PhotoAppConfiguration
spring.cloud.config.server.git.username=simplyi
spring.cloud.config.server.git.password=
#This flag is to indicate that the repository should be cloned on start up, not on demand
#This generally leads to a slower startup time, but faster first query.
#The default values falls, so I will provide true
spring.cloud.config.server.git.clone-on-start=true
#as of October 1, 2021,Git has renamed the default branch for all new projects from "master" to "main"
spring.cloud.config.server.git.default-label=main
spring.cloud.config.server.git.force-pull=true
spring.cloud.config.server.git.searchPaths=usersws,zuul

#in newer version, please use "busrefresh" there is no "-" anymore
management.endpoints.web.exposure.include=bus-refresh

#Rabbit MQ Configs
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
